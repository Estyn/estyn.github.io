<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Twillio | My Octopress Blog]]></title>
  <link href="http://Estyn.github.io/blog/categories/twillio/atom.xml" rel="self"/>
  <link href="http://Estyn.github.io/"/>
  <updated>2013-12-13T09:33:42+00:00</updated>
  <id>http://Estyn.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Azure Dev Machine Auto Shutdown Part 2]]></title>
    <link href="http://Estyn.github.io/blog/2013/09/06/azure-dev-machine-auto-shutdown-part-2/"/>
    <updated>2013-09-06T01:47:00+00:00</updated>
    <id>http://Estyn.github.io/blog/2013/09/06/azure-dev-machine-auto-shutdown-part-2</id>
    <content type="html"><![CDATA[<p>In <a href="/blog/2013/09/03/auto-shutdown-for-windows-azure-vm/">Part 1</a> we looked at how to set-up a simple script to shut down an azure virtual machine after a period of inactivity.  The problem I had with the previous solution was determining the amount of inactivity time to set the script to run at.  I often found the machine was shutting down when I didn&rsquo;t want it to.  In this post we will add SMS notification when the machine is about to shut down and we will add an option for cancelling the shut down.
 <!-- more --></p>

<h2>Step 1: Get a <a href="https://www.twilio.com/user/account">Twillio</a> account if you don&rsquo;t already have one.</h2>

<p>Twillio has a free trial account that will allow you to send free SMS&rsquo;s to your own phone.  Once you have a Twillio account you will need to write down your Account SID and you Auth Token, both can be found on the main account page in Twillio.  You will also need to write down your Twillio phone number.</p>

<h2>Step 2: Get the Twillio and RestSharp dll</h2>

<p>In order to use Twillio from powershell we will need to have a copy of  Twillio.API.dll which has a dependency on  RestSharp.dll so we will need that as well.  I&rsquo;ve found NuGet to be the easiest way to get both.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Install-Package Twilio</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Install-Package RestSharp`</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Once you have the dlls save them in the same folder as your script.</p>

<h2>Step 3: Modify the script to send an SMS prior to shutting down</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Add-Type -path &ldquo;c:\Twilio.Api.dll&rdquo;
</span><span class='line'>Add-Type -path &ldquo;c:\RestSharp.dll&rdquo;
</span><span class='line'>$twilio = new-object Twilio.TwilioRestClient(&ldquo;YOURACCOUNTSID&rdquo;, &ldquo;YOURAUTHTOKEN&rdquo;)
</span><span class='line'>$msg = $twilio.SendSmsMessage(&ldquo;YOURTWILLIONUMBER&rdquo;, &ldquo;YOURCELLPHONENUMBER&rdquo;, &ldquo;VM about to shutdown&rdquo;)</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Step 4: Add a delay to the script</h2>

<p>Having a notification that the VM is about to shut down isn&rsquo;t very useful if you can&rsquo;t do anything about it so we will add a delay so that you can cancel the shut down after having received the notification.</p>

<p>I&rsquo;m using a nice script by <a href="http://jdhitsolutions.com/blog/2012/04/friday-fun-powershell-countdown/">Jeffery Hicks</a> that displays a nice countdown message on the screen before executing the shut down.  You can read his blog post to see how the script works.  The complete script is listed below, it sends an SMS then waits 15 minutes before executing the shut down command. The countdown can be interrupted with the esc key to prevent the shut down.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;#&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;p> Script: Countdown2.ps1
</span><span class='line'> Version: 0.9
</span><span class='line'> Author: Jeffery Hicks&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>http://jdhitsolutions.com/blog
</span><span class='line'>http://twitter.com/JeffHicks
</span><span class='line'>http://www.ScriptingGeek.com
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p> Date: 4/27/2012
</span><span class='line'> Keywords:
</span><span class='line'> Comments:
</span><span class='line'> This is a variation on the Start-Countdown script from Josh Atwell
</span><span class='line'> (&lt;a href="http://www.vtesseract.com/post/21414227113/start-countdown-function-a-visual-for-start-sleep">http://www.vtesseract.com/post/21414227113/start-countdown-function-a-visual-for-start-sleep&lt;/a>)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p> &ldquo;Those who forget to script are doomed to repeat their work.&rdquo;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;ul>
</span><span class='line'>&lt;li>DO NOT USE IN A PRODUCTION ENVIRONMENT UNTIL YOU HAVE TESTED *&lt;/li>
</span><span class='line'>&lt;li>THOROUGHLY IN A LAB ENVIRONMENT. USE AT YOUR OWN RISK.  IF   *&lt;/li>
</span><span class='line'>&lt;li>YOU DO NOT UNDERSTAND WHAT THIS SCRIPT DOES OR HOW IT WORKS, *&lt;/li>
</span><span class='line'>&lt;li>DO NOT USE IT OUTSIDE OF A SECURE, TEST SETTING.             *&lt;/li>
</span><span class='line'>&lt;/ul>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;p> #>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Import-Module &ldquo;C:\Program Files (x86)\Microsoft SDKs\Windows Azure\PowerShell\Azure\Azure.psd1&rdquo;
</span><span class='line'>Function Start-Countdown {
</span><span class='line'>&lt;#&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>.Synopsis
</span><span class='line'> Initiates a countdown before running a command
</span><span class='line'>
</span><span class='line'>.Description  
</span><span class='line'> This is a variation on the Start-Countdown script from Josh Atwell
</span><span class='line'> (http://www.vtesseract.com/post/21414227113/start-countdown-function-a-visual-for-start-sleep). 
</span><span class='line'> It can be used instead of Start-Sleep and provides a visual countdown 
</span><span class='line'> progress during "sleep" times. At the end of the countdown, your 
</span><span class='line'> command will execute. Press the ESC key any time during the countdown
</span><span class='line'> to abort. 
</span><span class='line'>
</span><span class='line'> USING START-COUNTDOWN IN THE POWERSHELL ISE
</span><span class='line'> Results will vary slightly in the PowerShell ISE. If you use this in
</span><span class='line'> the ISE, it is recommended to use -Clear. You also cannot use the ESC
</span><span class='line'> key to abort the script if using the console. You'll need to press
</span><span class='line'> Ctrl+C. If using the progress bar, there is a Stop button in the ISE.
</span><span class='line'> If you abort in the ISE, you won't get the warning message.
</span><span class='line'>
</span><span class='line'> .Parameter Seconds
</span><span class='line'> The number of seconds to countdown. The default is 10.
</span><span class='line'>
</span><span class='line'> .Parameter Scriptblock
</span><span class='line'> A PowerShell scriptblock to execute at the end of the countdown.
</span><span class='line'>
</span><span class='line'> .Parameter ProgressBar
</span><span class='line'> Use a progress bar instead of the console.
</span><span class='line'>
</span><span class='line'> .Parameter Clear
</span><span class='line'> Clear the screen. Other wise, the countdown will use the current location.
</span><span class='line'>
</span><span class='line'> .Parameter Message
</span><span class='line'> The message to be displayed at the end of the countdown before any
</span><span class='line'> scriptblock is executed.
</span><span class='line'>
</span><span class='line'>.Example
</span><span class='line'> PS C:\&gt; Start-Countdown -Seconds 10 -clear
</span><span class='line'>
</span><span class='line'> This method will clear the screen and display descending seconds
</span><span class='line'>
</span><span class='line'>.Example
</span><span class='line'> PS C:\&gt; Start-Countdown -Seconds 30 -ProgressBar -scriptblock {get-service -comp (get-content computers.txt)}
</span><span class='line'>
</span><span class='line'> This method will display a progress bar on screen. At the end of the countdown the scriptblock will execute.
</span><span class='line'>
</span><span class='line'>.Link
</span><span class='line'> http://jdhitsolutions.com/blog
</span><span class='line'>
</span><span class='line'> .Link
</span><span class='line'> Write-Progress
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;h1>>&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>Param(
</span><span class='line'>[Parameter(Position=0,HelpMessage=&ldquo;Enter seconds to countdown from&rdquo;)]
</span><span class='line'>[Int]$Seconds = 10,
</span><span class='line'>[Parameter(Position=1,Mandatory=$False,
</span><span class='line'>HelpMessage=&ldquo;Enter a scriptblock to execute at the end of the countdown&rdquo;)]
</span><span class='line'>[scriptblock]$Scriptblock,
</span><span class='line'>[Switch]$ProgressBar,
</span><span class='line'>[Switch]$Clear,
</span><span class='line'>[String]$Message = &ldquo;Sutting down VM&rdquo;
</span><span class='line'>)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>save beginning value for total seconds&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>$TotalSeconds=$Seconds&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>get current cursor position&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>$Coordinate = New-Object System.Management.Automation.Host.Coordinates
</span><span class='line'>$Coordinate.X=$host.ui.rawui.CursorPosition.X
</span><span class='line'>$Coordinate.Y=$host.ui.rawui.CursorPosition.Y&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>If ($clear) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Clear-Host
</span><span class='line'>#find the middle of the current window
</span><span class='line'>$Coordinate.X=[int]($host.ui.rawui.WindowSize.Width/2)
</span><span class='line'>$Coordinate.Y=[int]($host.ui.rawui.WindowSize.Height/2)
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>define the Escape key&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>$ESCKey = 27&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>define a variable indicating if the user aborted the countdown&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>$Abort=$False&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>while ($seconds -ge 1) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>if ($host.ui.RawUi.KeyAvailable)
</span><span class='line'>        {
</span><span class='line'>        $key = $host.ui.RawUI.ReadKey("NoEcho,IncludeKeyUp,IncludeKeyDown")
</span><span class='line'>
</span><span class='line'>        if ($key.VirtualKeyCode -eq $ESCkey)
</span><span class='line'>            {
</span><span class='line'>            #ESC was pressed so quit the countdown and set abort flag to True
</span><span class='line'>            $Seconds = 0
</span><span class='line'>            $Abort=$True 
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>If($ProgressBar){
</span><span class='line'>    #calculate percent time remaining, but in reverse so the progress bar
</span><span class='line'>    #moves from left to right
</span><span class='line'>    $percent=100 - ($seconds/$TotalSeconds)*100
</span><span class='line'>    Write-Progress -Activity "Countdown" -SecondsRemaining $Seconds -Status "Shutting doown in (esc to cancel)" -PercentComplete $percent
</span><span class='line'>    Start-Sleep -Seconds 1
</span><span class='line'>} Else {
</span><span class='line'>    if ($Clear) {
</span><span class='line'>      Clear-Host
</span><span class='line'>    } 
</span><span class='line'>    $host.ui.rawui.CursorPosition=$Coordinate
</span><span class='line'>    #write the seconds with padded trailing spaces to overwrite any extra digits such
</span><span class='line'>    #as moving from 10 to 9
</span><span class='line'>    $pad=($TotalSeconds -as [string]).Length
</span><span class='line'>    if ($seconds -le 10) {
</span><span class='line'>        $color="Red"
</span><span class='line'>    }
</span><span class='line'>    else {
</span><span class='line'>        $color="Green"
</span><span class='line'>    }
</span><span class='line'>    Write-Host "ESC to cancel: $(([string]$Seconds).Padright($pad))" -foregroundcolor $color
</span><span class='line'>    Start-Sleep -Seconds 1
</span><span class='line'>}
</span><span class='line'>#decrement $Seconds
</span><span class='line'>$Seconds--
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>} #while&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>if ($Progress) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>    #set progress to complete
</span><span class='line'>    Write-Progress -Completed
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>if (-Not $Abort) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>if ($clear) {
</span><span class='line'>    #if $Clear was used, center the message in the console
</span><span class='line'>    $Coordinate.X=$Coordinate.X - ([int]($message.Length)/2)
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>$host.ui.rawui.CursorPosition=$Coordinate
</span><span class='line'>
</span><span class='line'>Write-Host $Message -ForegroundColor Green
</span><span class='line'>#run the scriptblock if specified
</span><span class='line'>if ($scriptblock) {    
</span><span class='line'>    Invoke-Command -ScriptBlock $Scriptblock
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>else {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Write-Warning "Countdown aborted"
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>} #end function
</span><span class='line'>$sb = {Stop-AzureVM -Name &ldquo;YOURVMNAME&rdquo; -ServiceName &ldquo;YOURSERVICENAME&rdquo; -Force}
</span><span class='line'> Add-Type -path &ldquo;c:\Twilio.Api.dll&rdquo;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Add-Type -path "c:\RestSharp.dll"
</span><span class='line'>$twilio = new-object Twilio.TwilioRestClient("YOURACCOUNTSID", "YOURAUTHTOKEN")
</span><span class='line'>$msg = $twilio.SendSmsMessage("YOURTWILLIONUMBER", "YOURCELLPHONENUMBER", "VM about to shutdown")
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>Start-Countdown 900 -Scriptblock $sb -ProgressBar  -Clear&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
